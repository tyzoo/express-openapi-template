{
    "entryFile": "./src/index.ts",
    "noImplicitAdditionalProperties": "throw-on-extras",
    "controllerPathGlobs": [
        "./src/v2/controllers/**/*.ts"
    ],
    "spec": {
        "name": "Example API",
        "description": "An example node app using OpenAPI - Express - Typescript. [Sign In With Ethereum](./../auth)",
        "contact": {
            "name": "@tyzoo",
            "url": "https://github.com/tyzoo",
            "email": "tyler.russell.design@gmail.com"
        },
        "basePath": "/v2",
        "entryFile": "./src/index.ts",
        "outputDirectory": "./src",
        "specVersion": 3,
        "persistAuthorization": true,
        "securityDefinitions": {
            "api_key": {
                "type": "apiKey",
                "name": "access_token",
                "in": "query"
            },
            "jwt": {
                "type": "apiKey",
                "name": "authorization",
                "in": "header",
                "scopes": {
                    "admin:all": "admin rights"
                }
            },
            "tsoa_auth": {
                "type": "oauth2",
                "authorizationUrl": "http://swagger.io/api/oauth/dialog",
                "flow": "implicit",
                "scopes": {
                    "write:pets": "modify things",
                    "read:pets": "read things"
                }
            }
        },
        "tags": [
            {
                "name": "Authentication",
                "description": "Authenticate using Sign in With Ethereum (SIWE) [Connect Wallet](./../auth)"
            },
            {
                "name": "CRUD",
                "description": "A set of example CRUD routes"
            },
            {
                "name": "Tests",
                "description": "Test if the API is up and running"
            },
            {
                "name": "Decentraland",
                "description": "Example routes enforcing DCL middleware"
            }
        ]
    },
    "routes": {
        "basePath": "/v2",
        "entryFile": "./src/index.ts",
        "routesDir": "./src/v2",
        "authenticationModule": "./src/v2/authentication.ts"
    }
}